#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct Input
{
    float4 position;
    float4 color;
    float3 normal;
    float3 fragPos;
};

constant float4 _41 = {};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float4 in_var_TEXCOORD0 [[user(locn0)]];
    float3 in_var_TEXCOORD1 [[user(locn1)]];
    float3 in_var_TEXCOORD2 [[user(locn2)]];
};

fragment main0_out main0(main0_in in [[stage_in]], float4 gl_FragCoord [[position]])
{
    main0_out out = {};
    float3 lightPos = float3(-1.0, 2.0, 3.0);
    float4 lightColor = float4(1.0, 1.0, 1.0, 10.0);
    float4 _45 = in.in_var_TEXCOORD0;
    float3 _44 = in.in_var_TEXCOORD1;
    float3 _43 = in.in_var_TEXCOORD2;
    float3 _63 = float3(-1.0, 2.0, 3.0) - in.in_var_TEXCOORD2;
    float3 _46 = _63;
    float _64 = length(_63);
    float _47 = _64;
    float3 _66 = _63 / float3(_64);
    _46 = _66;
    float3 _67 = fast::normalize(in.in_var_TEXCOORD1);
    float3 _48 = _67;
    float _68 = dot(_66, _67);
    float _49 = _68;
    float3 _50;
    float3 _87;
    if (_68 > 0.0)
    {
        float _74 = 1.0 / powr(_64, 2.0);
        float _51 = _74;
        float3 _79 = lightColor.xyz * lightColor.w;
        float3 _52 = _79;
        float3 _81 = (_79 * _68) * _74;
        float3 _53 = _81;
        float3 _85 = float3(in.in_var_TEXCOORD0.xyz);
        float3 _54 = _85;
        float3 _86 = _81 * _85;
        _50 = _86;
        _87 = _86;
    }
    else
    {
        _50 = float3(0.0);
        _87 = float3(0.0);
    }
    float3 _55 = float3(0.0);
    float3 _56 = _87;
    float4 _91 = float4(_87, 1.0);
    float4 _57 = _91;
    out.out_var_SV_Target0 = _91;
    return out;
}

