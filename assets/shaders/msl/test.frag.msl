#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Test
{
    float4 test;
};

struct Input
{
    float4 position;
    float4 color;
    float3 normal;
    float3 fragPos;
};

constant float4 _36 = {};
constant float3 _37 = {};

struct main0_out
{
    float4 out_var_SV_Target0 [[color(0)]];
};

struct main0_in
{
    float4 in_var_TEXCOORD0 [[user(locn0)]];
    float3 in_var_TEXCOORD1 [[user(locn1)]];
    float3 in_var_TEXCOORD2 [[user(locn2)]];
};

fragment main0_out main0(main0_in in [[stage_in]], constant type_Test& Test [[buffer(0)]], float4 gl_FragCoord [[position]])
{
    main0_out out = {};
    float3 _39 = in.in_var_TEXCOORD2;
    float3 _48 = fast::normalize(in.in_var_TEXCOORD2);
    float3 _40 = _48;
    float3 _57 = float3(0.5) + (cos((float3(Test.test.x) + _48) + float3(0.0, 2.0, 4.0)) * 0.5);
    float3 _41 = _57;
    float4 _61 = float4(_57, 1.0);
    float4 _42 = _61;
    out.out_var_SV_Target0 = _61;
    return out;
}

