#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_UBO
{
    float4x4 _19_mvp;
};

struct SPIRV_Cross_Input
{
    float3 in_position;
    float4 in_color;
};

struct SPIRV_Cross_Output
{
    float4 out_color;
    float4 _RESERVED_IDENTIFIER_FIXUP_gl_Position;
};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[attribute(0)]];
    float4 in_var_TEXCOORD1 [[attribute(1)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_UBO& UBO [[buffer(0)]])
{
    main0_out out = {};
    float4 _RESERVED_IDENTIFIER_FIXUP_gl_Position = float4(0.0);
    float3 in_position = float3(0.0);
    float4 out_color = float4(0.0);
    float4 in_color = float4(0.0);
    float3 _40 = in.in_var_TEXCOORD0;
    float4 _39 = in.in_var_TEXCOORD1;
    in_position = in.in_var_TEXCOORD0;
    in_color = in.in_var_TEXCOORD1;
    float4 _54 = UBO._19_mvp * float4(in.in_var_TEXCOORD0, 1.0);
    _RESERVED_IDENTIFIER_FIXUP_gl_Position = _54;
    out_color = in.in_var_TEXCOORD1;
    float4 _43 = _54;
    float4 _44 = in.in_var_TEXCOORD1;
    float4 _42 = in.in_var_TEXCOORD1;
    float4 _41 = _54;
    out.out_var_TEXCOORD0 = in.in_var_TEXCOORD1;
    out.gl_Position = _54;
    return out;
}

