#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_World
{
    float4x4 view;
    float4x4 proj;
};

struct type_Object
{
    float4x4 model;
};

struct Input
{
    float3 position;
    float4 color;
    float3 normal;
};

struct Output
{
    float4 position;
    float4 color;
    float3 normal;
    float3 fragPos;
};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float3 out_var_TEXCOORD1 [[user(locn1)]];
    float3 out_var_TEXCOORD2 [[user(locn2)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[attribute(0)]];
    float4 in_var_TEXCOORD1 [[attribute(1)]];
    float3 in_var_TEXCOORD2 [[attribute(2)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_World& World [[buffer(0)]], constant type_Object& Object [[buffer(1)]])
{
    main0_out out = {};
    float3 _45 = in.in_var_TEXCOORD0;
    float4 _44 = in.in_var_TEXCOORD1;
    float3 _43 = in.in_var_TEXCOORD2;
    float4 _66 = float4(in.in_var_TEXCOORD0, 1.0);
    float4 _67 = Object.model * _66;
    float4 _54 = _67;
    float4x4 _72 = World.proj * World.view;
    float4x4 _55 = transpose(_72);
    float4x4 _73 = _72 * Object.model;
    float4x4 _56 = transpose(_73);
    float4 _74 = _73 * _66;
    float4 _53 = _74;
    float4 _52 = in.in_var_TEXCOORD1;
    float3 _75 = _67.xyz;
    float3 _50 = _75;
    float3 _82 = fast::normalize((Object.model * float4(in.in_var_TEXCOORD2, 0.0)).xyz);
    float3 _51 = _82;
    float4 _49 = _74;
    float4 _48 = in.in_var_TEXCOORD1;
    float3 _47 = _82;
    float3 _46 = _75;
    out.gl_Position = _74;
    out.out_var_TEXCOORD0 = in.in_var_TEXCOORD1;
    out.out_var_TEXCOORD1 = _82;
    out.out_var_TEXCOORD2 = _75;
    return out;
}

