#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Object
{
    float4x4 model;
};

struct type_World
{
    float4x4 view;
    float4x4 proj;
};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float3 out_var_TEXCOORD1 [[user(locn1)]];
    float3 out_var_TEXCOORD2 [[user(locn2)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[attribute(0)]];
    float4 in_var_TEXCOORD1 [[attribute(1)]];
    float3 in_var_TEXCOORD2 [[attribute(2)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_Object& Object [[buffer(0)]], constant type_World& World [[buffer(1)]])
{
    main0_out out = {};
    float4 _41 = float4(in.in_var_TEXCOORD0, 1.0);
    out.gl_Position = ((World.proj * World.view) * Object.model) * _41;
    out.out_var_TEXCOORD0 = in.in_var_TEXCOORD1;
    out.out_var_TEXCOORD1 = fast::normalize((Object.model * float4(in.in_var_TEXCOORD2, 0.0)).xyz);
    out.out_var_TEXCOORD2 = (Object.model * _41).xyz;
    return out;
}

