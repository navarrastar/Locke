#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Object
{
    float4x4 model;
};

struct type_World
{
    float4x4 view;
    float4x4 proj;
};

struct type_Skin
{
    float4x4 joint_matrices[100];
};

struct Input
{
    float3 position;
    float4 color;
    float3 normal;
    float2 uv;
    float4 tangent;
    float4 joints;
    float4 weights;
};

struct Output
{
    float4 position;
    float4 color;
    float3 normal;
    float2 uv;
    float3 fragPos;
};

constant float4 _66 = {};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float3 out_var_TEXCOORD1 [[user(locn1)]];
    float2 out_var_TEXCOORD2 [[user(locn2)]];
    float3 out_var_TEXCOORD3 [[user(locn3)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[attribute(0)]];
    float4 in_var_TEXCOORD1 [[attribute(1)]];
    float3 in_var_TEXCOORD2 [[attribute(2)]];
    float2 in_var_TEXCOORD3 [[attribute(3)]];
    float4 in_var_TEXCOORD4 [[attribute(4)]];
    float4 in_var_TEXCOORD5 [[attribute(5)]];
    float4 in_var_TEXCOORD6 [[attribute(6)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_Object& Object [[buffer(0)]], constant type_World& World [[buffer(1)]], constant type_Skin& Skin [[buffer(2)]])
{
    main0_out out = {};
    uint MAX_JOINTS = 100u;
    float3 _75 = in.in_var_TEXCOORD0;
    float4 _74 = in.in_var_TEXCOORD1;
    float3 _73 = in.in_var_TEXCOORD2;
    float2 _72 = in.in_var_TEXCOORD3;
    float4 _71 = in.in_var_TEXCOORD5;
    float4 _70 = in.in_var_TEXCOORD6;
    float4x4 _86 = float4x4(float4(0.0), float4(0.0), float4(0.0), float4(0.0));
    float4x4 _108 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.x)] * in.in_var_TEXCOORD6.x;
    _86 = transpose(_108);
    float4x4 _120 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.y)] * in.in_var_TEXCOORD6.y;
    float4 _122 = float4(_108[0][0], _108[1][0], _108[2][0], _108[3][0]) + float4(_120[0][0], _120[1][0], _120[2][0], _120[3][0]);
    float4 _124 = float4(_108[0][1], _108[1][1], _108[2][1], _108[3][1]) + float4(_120[0][1], _120[1][1], _120[2][1], _120[3][1]);
    float4 _126 = float4(_108[0][2], _108[1][2], _108[2][2], _108[3][2]) + float4(_120[0][2], _120[1][2], _120[2][2], _120[3][2]);
    float4 _128 = float4(_108[0][3], _108[1][3], _108[2][3], _108[3][3]) + float4(_120[0][3], _120[1][3], _120[2][3], _120[3][3]);
    _86 = float4x4(_122, _124, _126, _128);
    float4x4 _137 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.z)] * in.in_var_TEXCOORD6.z;
    float4 _139 = _122 + float4(_137[0][0], _137[1][0], _137[2][0], _137[3][0]);
    float4 _141 = _124 + float4(_137[0][1], _137[1][1], _137[2][1], _137[3][1]);
    float4 _143 = _126 + float4(_137[0][2], _137[1][2], _137[2][2], _137[3][2]);
    float4 _145 = _128 + float4(_137[0][3], _137[1][3], _137[2][3], _137[3][3]);
    _86 = float4x4(_139, _141, _143, _145);
    float4x4 _154 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.w)] * in.in_var_TEXCOORD6.w;
    float4x4 _163 = float4x4(_139 + float4(_154[0][0], _154[1][0], _154[2][0], _154[3][0]), _141 + float4(_154[0][1], _154[1][1], _154[2][1], _154[3][1]), _143 + float4(_154[0][2], _154[1][2], _154[2][2], _154[3][2]), _145 + float4(_154[0][3], _154[1][3], _154[2][3], _154[3][3]));
    _86 = _163;
    float4 _168 = float4(in.in_var_TEXCOORD0, 1.0) * _163;
    float4 _87 = _168;
    float4 _173 = float4(in.in_var_TEXCOORD2, 0.0) * _163;
    float3 _88 = _173.xyz;
    float4 _177 = Object.model * _168;
    float4 _89 = _177;
    float4x4 _182 = World.proj * World.view;
    float4x4 _90 = transpose(_182);
    float4x4 _91 = transpose(_182 * Object.model);
    float4 _184 = _182 * _177;
    float4 _85 = _184;
    float4 _84 = in.in_var_TEXCOORD1;
    float3 _191 = fast::normalize((Object.model * float4(_173.xyz, 0.0)).xyz);
    float3 _83 = _191;
    float2 _82 = in.in_var_TEXCOORD3;
    float3 _192 = _177.xyz;
    float3 _81 = _192;
    float4 _80 = _184;
    float4 _79 = in.in_var_TEXCOORD1;
    float3 _78 = _191;
    float2 _77 = in.in_var_TEXCOORD3;
    float3 _76 = _192;
    out.gl_Position = _184;
    out.out_var_TEXCOORD0 = in.in_var_TEXCOORD1;
    out.out_var_TEXCOORD1 = _191;
    out.out_var_TEXCOORD2 = in.in_var_TEXCOORD3;
    out.out_var_TEXCOORD3 = _192;
    return out;
}

