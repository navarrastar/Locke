#include <metal_stdlib>
#include <simd/simd.h>

using namespace metal;

struct type_Object
{
    float4x4 model;
};

struct type_World
{
    float4x4 view;
    float4x4 proj;
};

struct type_Skin
{
    float4x4 joint_matrices[100];
};

struct Input
{
    float3 position;
    float4 color;
    float3 normal;
    float2 uv;
    float3 tangent;
    float4 joints;
    float4 weights;
};

struct Output
{
    float4 position;
    float4 color;
    float3 normal;
    float2 uv;
    float3 fragPos;
};

constant float3 _66 = {};

struct main0_out
{
    float4 out_var_TEXCOORD0 [[user(locn0)]];
    float3 out_var_TEXCOORD1 [[user(locn1)]];
    float2 out_var_TEXCOORD2 [[user(locn2)]];
    float3 out_var_TEXCOORD3 [[user(locn3)]];
    float4 gl_Position [[position]];
};

struct main0_in
{
    float3 in_var_TEXCOORD0 [[attribute(0)]];
    float4 in_var_TEXCOORD1 [[attribute(1)]];
    float3 in_var_TEXCOORD2 [[attribute(2)]];
    float2 in_var_TEXCOORD3 [[attribute(3)]];
    float3 in_var_TEXCOORD4 [[attribute(4)]];
    float4 in_var_TEXCOORD5 [[attribute(5)]];
    float4 in_var_TEXCOORD6 [[attribute(6)]];
};

vertex main0_out main0(main0_in in [[stage_in]], constant type_Object& Object [[buffer(0)]], constant type_World& World [[buffer(1)]], constant type_Skin& Skin [[buffer(2)]])
{
    main0_out out = {};
    uint MAX_JOINTS = 100u;
    float3 _75 = in.in_var_TEXCOORD0;
    float4 _74 = in.in_var_TEXCOORD1;
    float3 _73 = in.in_var_TEXCOORD2;
    float2 _72 = in.in_var_TEXCOORD3;
    float4 _71 = in.in_var_TEXCOORD5;
    float4 _70 = in.in_var_TEXCOORD6;
    float4x4 _86 = float4x4(float4(0.0), float4(0.0), float4(0.0), float4(0.0));
    float4x4 _107 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.x)] * in.in_var_TEXCOORD6.x;
    _86 = transpose(_107);
    float4x4 _119 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.y)] * in.in_var_TEXCOORD6.y;
    float4 _121 = float4(_107[0][0], _107[1][0], _107[2][0], _107[3][0]) + float4(_119[0][0], _119[1][0], _119[2][0], _119[3][0]);
    float4 _123 = float4(_107[0][1], _107[1][1], _107[2][1], _107[3][1]) + float4(_119[0][1], _119[1][1], _119[2][1], _119[3][1]);
    float4 _125 = float4(_107[0][2], _107[1][2], _107[2][2], _107[3][2]) + float4(_119[0][2], _119[1][2], _119[2][2], _119[3][2]);
    float4 _127 = float4(_107[0][3], _107[1][3], _107[2][3], _107[3][3]) + float4(_119[0][3], _119[1][3], _119[2][3], _119[3][3]);
    _86 = float4x4(_121, _123, _125, _127);
    float4x4 _136 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.z)] * in.in_var_TEXCOORD6.z;
    float4 _138 = _121 + float4(_136[0][0], _136[1][0], _136[2][0], _136[3][0]);
    float4 _140 = _123 + float4(_136[0][1], _136[1][1], _136[2][1], _136[3][1]);
    float4 _142 = _125 + float4(_136[0][2], _136[1][2], _136[2][2], _136[3][2]);
    float4 _144 = _127 + float4(_136[0][3], _136[1][3], _136[2][3], _136[3][3]);
    _86 = float4x4(_138, _140, _142, _144);
    float4x4 _153 = Skin.joint_matrices[int(in.in_var_TEXCOORD5.w)] * in.in_var_TEXCOORD6.w;
    float4x4 _162 = float4x4(_138 + float4(_153[0][0], _153[1][0], _153[2][0], _153[3][0]), _140 + float4(_153[0][1], _153[1][1], _153[2][1], _153[3][1]), _142 + float4(_153[0][2], _153[1][2], _153[2][2], _153[3][2]), _144 + float4(_153[0][3], _153[1][3], _153[2][3], _153[3][3]));
    _86 = _162;
    float4 _167 = float4(in.in_var_TEXCOORD0, 1.0) * _162;
    float4 _87 = _167;
    float4 _172 = float4(in.in_var_TEXCOORD2, 0.0) * _162;
    float3 _88 = _172.xyz;
    float4 _176 = Object.model * _167;
    float4 _89 = _176;
    float4x4 _181 = World.proj * World.view;
    float4x4 _90 = transpose(_181);
    float4 _182 = _181 * _176;
    float4 _85 = _182;
    float4 _84 = in.in_var_TEXCOORD1;
    float3 _189 = fast::normalize((Object.model * float4(_172.xyz, 0.0)).xyz);
    float3 _83 = _189;
    float2 _82 = in.in_var_TEXCOORD3;
    float3 _190 = _176.xyz;
    float3 _81 = _190;
    float4 _80 = _182;
    float4 _79 = in.in_var_TEXCOORD1;
    float3 _78 = _189;
    float2 _77 = in.in_var_TEXCOORD3;
    float3 _76 = _190;
    out.gl_Position = _182;
    out.out_var_TEXCOORD0 = in.in_var_TEXCOORD1;
    out.out_var_TEXCOORD1 = _189;
    out.out_var_TEXCOORD2 = in.in_var_TEXCOORD3;
    out.out_var_TEXCOORD3 = _190;
    return out;
}

